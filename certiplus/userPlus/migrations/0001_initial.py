# Generated by Django 3.1.7 on 2021-03-22 06:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import encrypted_fields.fields
import timezone_field.fields
import userPlus.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('key', models.CharField(default='4c5a7955-d', editable=False, max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('email', encrypted_fields.fields.EncryptedEmailField(max_length=254, verbose_name='email address')),
                ('name', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=30, verbose_name='Name')),
                ('mobile', models.CharField(max_length=17, unique=True, verbose_name='Mobile')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, null=True, verbose_name='updated_on')),
                ('is_Verified', models.BooleanField(default=False, verbose_name='Is_Verified')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('first_login', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('timezone', timezone_field.fields.TimeZoneField(default='Indian/Christmas')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'Users',
            },
            managers=[
                ('objects', userPlus.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.IntegerField(null=True, verbose_name='otp')),
                ('otp_time', models.DateTimeField(null=True, verbose_name='otp_Time')),
                ('counter', models.IntegerField(null=True, verbose_name='counter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='4c5e0689-b', editable=False, max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('Company_Name', models.CharField(max_length=100, null=True, verbose_name='Company Name')),
                ('Legal_Name', models.CharField(max_length=100, null=True, verbose_name='Legal Name')),
                ('PAN_CARD', models.CharField(max_length=30, null=True, verbose_name='PAN Card')),
                ('Tax_ID', models.CharField(max_length=50, null=True, verbose_name='Tax ID')),
                ('user_name', models.CharField(max_length=50, null=True, verbose_name='User Name')),
                ('mobile', models.CharField(max_length=40, null=True, verbose_name='Mobile')),
                ('Address_Line_1', models.CharField(max_length=50, null=True, verbose_name='Address Line 1')),
                ('Address_Line_2', models.CharField(max_length=50, null=True, verbose_name='Address Line 2')),
                ('Locality', models.CharField(max_length=50, null=True, verbose_name='Locality')),
                ('City', models.CharField(max_length=50, null=True, verbose_name='City')),
                ('State', models.CharField(max_length=50, null=True, verbose_name='State')),
                ('Postal_Code', models.IntegerField(null=True, verbose_name='Postal Code')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('Country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='userPlus.country')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'company',
            },
        ),
    ]
